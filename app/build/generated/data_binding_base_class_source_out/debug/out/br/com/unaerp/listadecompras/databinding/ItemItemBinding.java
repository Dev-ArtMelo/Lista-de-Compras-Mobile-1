// Generated by view binder compiler. Do not edit!
package br.com.unaerp.listadecompras.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import br.com.unaerp.listadecompras.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnEditar;

  @NonNull
  public final ImageButton btnExcluir;

  @NonNull
  public final CheckBox checkComprado;

  @NonNull
  public final TextView txtDetalhesItem;

  @NonNull
  public final TextView txtNomeItem;

  private ItemItemBinding(@NonNull LinearLayout rootView, @NonNull ImageButton btnEditar,
      @NonNull ImageButton btnExcluir, @NonNull CheckBox checkComprado,
      @NonNull TextView txtDetalhesItem, @NonNull TextView txtNomeItem) {
    this.rootView = rootView;
    this.btnEditar = btnEditar;
    this.btnExcluir = btnExcluir;
    this.checkComprado = checkComprado;
    this.txtDetalhesItem = txtDetalhesItem;
    this.txtNomeItem = txtNomeItem;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEditar;
      ImageButton btnEditar = ViewBindings.findChildViewById(rootView, id);
      if (btnEditar == null) {
        break missingId;
      }

      id = R.id.btnExcluir;
      ImageButton btnExcluir = ViewBindings.findChildViewById(rootView, id);
      if (btnExcluir == null) {
        break missingId;
      }

      id = R.id.checkComprado;
      CheckBox checkComprado = ViewBindings.findChildViewById(rootView, id);
      if (checkComprado == null) {
        break missingId;
      }

      id = R.id.txtDetalhesItem;
      TextView txtDetalhesItem = ViewBindings.findChildViewById(rootView, id);
      if (txtDetalhesItem == null) {
        break missingId;
      }

      id = R.id.txtNomeItem;
      TextView txtNomeItem = ViewBindings.findChildViewById(rootView, id);
      if (txtNomeItem == null) {
        break missingId;
      }

      return new ItemItemBinding((LinearLayout) rootView, btnEditar, btnExcluir, checkComprado,
          txtDetalhesItem, txtNomeItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
